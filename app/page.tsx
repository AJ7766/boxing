import { prisma } from "@/lib/prisma";
import { Video } from "@/components/News/Video";
import { EventDetails } from "@/components/News/EventDetails";
import { BroadcastProps } from "@/types/fightsType";
import { Hero } from "@/components/News/Hero";

const videos = [
  {
    id: 'Bjgke_VnPIk',
    alt: 'Ryan Garcia and Devin Haney Face-Offs',
    type: 'FACE-OFF'
  },
  {
    id: 'jkshdpVr2vk',
    alt: 'Fatal Fury NYC Launch Press Conference With Devin Haney, Ryan Garcia & Teofimo Lopez',
    type: 'PRESS CONFERENCE',
  },
  {
    id: 'j6L7PxQvKmw',
    alt: 'RYAN GARCIA & EDDY TALK ROLLY ROMERO FIGHT! "RYAN IS ON ANOTHER LEVEL! HES GONNA BE READY',
    type: 'RYAN GARCIA TALKS ABOUT THE FIGHT',
  }]


export default async function News() {
  const fighterSelect = {
    name: true,
    nickname: true,
    age: true,
    height: true,
    nationality: true,
    reach: true,
    stance: true,
    wins: true,
    losses: true,
    draws: true,
    total_bouts: true,
    total_rounds: true,
    ko_percentage: true,
    ko_wins: true,
    stopped: true,
  };

  const id = '67c2bf078553c6d8585ef370';
  const fetchedFight = await prisma.fight.findUnique({
    where: { id },
    select: {
      title: true,
      location: true,
      date: true,
      eventDate: true,
      broadcasters: true,
      fighter1: {
        select: fighterSelect
      },
      fighter2: {
        select: fighterSelect
      },
    },
  });

  if (!fetchedFight)
    console.error('No fight found');

  return (
    <>
      <Hero
        fighter1={fetchedFight?.fighter1?.name || fetchedFight?.fighter1?.nickname}
        fighter2={fetchedFight?.fighter2?.name || fetchedFight?.fighter2?.nickname}
      />
      <main className={`relative bg-white px-7 py-16`}>
        <div className="relative overflow-hidden z-10">
          <EventDetails
            fighter1={fetchedFight?.fighter1?.name || fetchedFight?.fighter1?.nickname}
            fighter2={fetchedFight?.fighter2?.name || fetchedFight?.fighter2?.nickname}
            eventDate={fetchedFight?.eventDate?.toISOString()}
            location={fetchedFight?.location}
            date={fetchedFight?.date?.toISOString()}
            broadcasters={fetchedFight?.broadcasters as BroadcastProps[] | undefined}
          />
          {/* Videos */}
          <div className="flex flex-row gap-1">
            {videos && videos.map((video) => (
              <Video
                key={video.id}
                id={video.id}
                alt={video.alt}
                type={video.type}
              />
            ))
            }
          </div>
        </div>
      </main >
    </>
  )
}

export const metadata = {
  title: "News - Boxing",
  description: "Generated by create next app",
};